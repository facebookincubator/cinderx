# Copyright (c) Meta Platforms, Inc. and affiliates.
# pyre-unsafe

from types import CodeType
from typing import Any, Type, TypeVar

STRUCTURED_DATA_VERSION: int
_built_with_asan: bool

TType = TypeVar("TType", bound=Type[object])

def _get_arg0_from_pyframe(*args, **kwargs) -> Any: ...
def _get_awaiter_frame(*args, **kwargs) -> Any: ...
def _get_call_stack(*args, **kwargs) -> Any: ...
def _get_coro_awaiter(*args, **kwargs) -> Any: ...
def _get_entire_call_stack_as_qualnames(*args, **kwargs) -> Any: ...
def _get_frame_gen(*args, **kwargs) -> Any: ...
def _get_qualname(*args, **kwargs) -> Any: ...
def _has_no_shadowing_instances(*args, **kwargs) -> Any: ...
def _set_qualname(_code: CodeType, _name: str, /) -> None: ...
def cinder_set_warn_handler(*args, **kwargs) -> Any: ...
def debug_break(*args, **kwargs) -> Any: ...
def freeze_type(_type: TType, /) -> TType: ...
def get_warn_handler() -> Any: ...
def getknobs(*args, **kwargs) -> Any: ...
def set_warn_handler(cb) -> Any: ...
def setknobs(knobs) -> Any: ...
def toggle_dump_ref_changes() -> None: ...
def warn_on_inst_dict(_type: TType, /) -> TType: ...
