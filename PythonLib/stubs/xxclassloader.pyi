# Copyright (c) Meta Platforms, Inc. and affiliates.
# pyre-unsafe

from typing import Any, Never

class spamobj:
    def error(self) -> Never: ...
    def getint(self) -> int: ...
    def getint16(self) -> int: ...
    def getint32(self) -> int: ...
    def getint8(self) -> int: ...
    def getstate(self) -> object: ...
    def getstr(self) -> str: ...
    def getuint16(self) -> int: ...
    def getuint32(self) -> int: ...
    def getuint64(self) -> int: ...
    def getuint8(self) -> int: ...
    def setint(self, i) -> Any: ...
    def setint16(self, i) -> Any: ...
    def setint32(self, i) -> Any: ...
    def setint8(self, i) -> Any: ...
    def setstate(self, state) -> Any: ...
    def setstate_untyped(self, *args, **kwargs) -> Any: ...
    def setstateoptional(self, *args, **kwargs) -> Any: ...
    def setstr(self, s) -> Any: ...
    def setuint16(self, i) -> Any: ...
    def setuint32(self, i) -> Any: ...
    def setuint64(self, i) -> Any: ...
    def setuint8(self, i) -> Any: ...
    def twoargs(self, s) -> Any: ...
    @classmethod
    def __class_getitem__(cls, *args, **kwargs) -> Any: ...

def bar(*args, **kwargs) -> Any: ...
def foo(*args, **kwargs) -> Any: ...
def neg(*args, **kwargs) -> Any: ...
def traverse_heap(*args, **kwargs) -> Any: ...
def unsafe_change_type(*args, **kwargs) -> Any: ...
