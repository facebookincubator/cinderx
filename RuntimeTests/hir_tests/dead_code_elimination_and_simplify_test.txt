--- Test Suite Name ---
DeadCodeEliminationAndSimplifyTest
--- Passes ---
Simplify
DeadCodeElimination
--- Test Name ---
UnboxOfStaticGlobalIsOptimized
--- Input ---
from __static__ import rand, RAND_MAX, box, int64
def test():
    x: int64 = rand() // int64(RAND_MAX)
    return box(x)
--- Expected 3.10 ---
fun jittestmodule:test {
  bb 0 {
    v9:Nullptr = LoadConst<Nullptr>
    Snapshot
    v10:CInt32 = CallStatic<static_rand@0xdeadbeef, 0>
    Snapshot
    v11:CInt64 = IntConvert<CInt64> v10
    v19:CInt64[2147483647] = LoadConst<CInt64[2147483647]>
    v16:CInt64 = IntBinaryOp<FloorDivide> v11 v19
    Snapshot
    v18:LongExact = PrimitiveBox<CInt64> v16 {
      FrameState {
        CurInstrOffset 18
        Locals<1> v16
      }
    }
    Return v18
  }
}
--- Expected 3.12 ---
fun jittestmodule:test {
  bb 0 {
    v9:Nullptr = LoadConst<Nullptr>
    Snapshot
    v10:CInt32 = CallStatic<static_rand@0xdeadbeef, 0>
    Snapshot
    v11:CInt64 = IntConvert<CInt64> v10
    v19:CInt64[2147483647] = LoadConst<CInt64[2147483647]>
    v16:CInt64 = IntBinaryOp<FloorDivide> v11 v19
    Snapshot
    v18:LongExact = PrimitiveBox<CInt64> v16 {
      FrameState {
        CurInstrOffset 20
        Locals<1> v16
      }
    }
    Return v18
  }
}
--- Test Name ---
UnboxOfFinalDoubleIsEliminated
--- Input ---
from typing import Final
from __static__ import double, unbox

MY_FINAL: Final[float] = 1.23

def test() -> double:
    d: double = unbox(MY_FINAL)
    return d
--- Expected 3.10 ---
fun jittestmodule:test {
  bb 0 {
    v4:Nullptr = LoadConst<Nullptr>
    Snapshot
    v5:MortalFloatExact[1.23] = LoadConst<MortalFloatExact[1.23]>
    Snapshot
    v9:CDouble[1.23] = LoadConst<CDouble[1.23]>
    Return<CDouble> v9
  }
}
--- Expected 3.12 ---
fun jittestmodule:test {
  bb 0 {
    v4:Nullptr = LoadConst<Nullptr>
    Snapshot
    v5:MortalFloatExact[1.23] = LoadConst<MortalFloatExact[1.23]>
    Snapshot
    v9:CDouble[1.23] = LoadConst<CDouble[1.23]>
    Return<CDouble> v9
  }
}
--- End ---
