--- Test Suite Name ---
DynamicComparisonEliminationTest
--- Passes ---
DynamicComparisonElimination
--- Test Name ---
EqualBecomesCompareBool
--- Input ---
# HIR
fun test {
  bb 0 {
    v0 = LoadArg<0>
    v1 = LoadArg<1>
    v2 = Compare<Equal> v0 v1
    v3 = IsTruthy v2
    CondBranch<1, 2> v3
  }

  bb 1 {
    v4 = LoadConst<LongExact[1]>
    Return v4
  }

  bb 2 {
    v5 = LoadConst<NoneType>
    Return v5
  }
}
--- Expected 3.10 ---
fun test {
  bb 0 {
    v0:Object = LoadArg<0>
    v1:Object = LoadArg<1>
    v3:CInt32 = CompareBool<Equal> v0 v1 {
      FrameState {
        CurInstrOffset -2
      }
    }
    CondBranch<1, 2> v3
  }

  bb 1 (preds 0) {
    v4:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return v4
  }

  bb 2 (preds 0) {
    v5:NoneType = LoadConst<NoneType>
    Return v5
  }
}
--- Expected 3.12 ---
fun test {
  bb 0 {
    v0:Object = LoadArg<0>
    v1:Object = LoadArg<1>
    v3:CInt32 = CompareBool<Equal> v0 v1 {
      FrameState {
        CurInstrOffset -2
      }
    }
    CondBranch<1, 2> v3
  }

  bb 1 (preds 0) {
    v4:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return v4
  }

  bb 2 (preds 0) {
    v5:NoneType = LoadConst<NoneType>
    Return v5
  }
}
--- Test Name ---
NotEqualBecomesCompareBool
--- Input ---
# HIR
fun test {
  bb 0 {
    v0 = LoadArg<0>
    v1 = LoadArg<1>
    v2 = Compare<NotEqual> v0 v1
    v3 = IsTruthy v2
    CondBranch<1, 2> v3
  }

  bb 1 {
    v4 = LoadConst<LongExact[1]>
    Return v4
  }

  bb 2 {
    v5 = LoadConst<NoneType>
    Return v5
  }
}
--- Expected 3.10 ---
fun test {
  bb 0 {
    v0:Object = LoadArg<0>
    v1:Object = LoadArg<1>
    v3:CInt32 = CompareBool<NotEqual> v0 v1 {
      FrameState {
        CurInstrOffset -2
      }
    }
    CondBranch<1, 2> v3
  }

  bb 1 (preds 0) {
    v4:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return v4
  }

  bb 2 (preds 0) {
    v5:NoneType = LoadConst<NoneType>
    Return v5
  }
}
--- Expected 3.12 ---
fun test {
  bb 0 {
    v0:Object = LoadArg<0>
    v1:Object = LoadArg<1>
    v3:CInt32 = CompareBool<NotEqual> v0 v1 {
      FrameState {
        CurInstrOffset -2
      }
    }
    CondBranch<1, 2> v3
  }

  bb 1 (preds 0) {
    v4:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return v4
  }

  bb 2 (preds 0) {
    v5:NoneType = LoadConst<NoneType>
    Return v5
  }
}
--- Test Name ---
IsInstanceFastpath
--- Input ---
def test(x):
  if isinstance(x, str):
    return 1
--- Expected 3.10 ---
fun jittestmodule:test {
  bb 0 {
    v7:Object = LoadArg<0; "x">
    Snapshot
    v8:OptObject = LoadGlobalCached<0; "isinstance">
    v9:MortalObjectUser[builtin_function_or_method:isinstance:0xdeadbeef] = GuardIs<0xdeadbeef> v8 {
      Descr 'LOAD_GLOBAL: isinstance'
    }
    Snapshot
    v11:OptObject = LoadGlobalCached<1; "str">
    v12:ImmortalTypeExact[str:obj] = GuardIs<0xdeadbeef> v11 {
      Descr 'LOAD_GLOBAL: str'
    }
    Snapshot
    v17:Type = LoadField<ob_type@8, Type, borrowed> v7
    v18:CBool = PrimitiveCompare<Equal> v17 v12
    CondBranch<3, 4> v18
  }

  bb 3 (preds 0) {
    v19:Bool = PrimitiveBoxBool v18
    Branch<5>
  }

  bb 4 (preds 0) {
    v20:CInt32 = IsInstance v7 v12 {
      FrameState {
        CurInstrOffset 6
        Locals<1> v7
      }
    }
    v21:CInt32[1] = LoadConst<CInt32[1]>
    v22:CBool = PrimitiveCompare<Equal> v20 v21
    v23:Bool = PrimitiveBoxBool v22
    Branch<5>
  }

  bb 5 (preds 3, 4) {
    v24:Bool = Phi<3, 4> v19 v23
    Snapshot
    UseType<Bool> v24
    v25:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v26:CBool = PrimitiveCompare<Equal> v24 v25
    v27:CInt32 = IntConvert<CInt32> v26
    CondBranch<1, 2> v26
  }

  bb 1 (preds 5) {
    Snapshot
    v15:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return v15
  }

  bb 2 (preds 5) {
    Snapshot
    v16:NoneType = LoadConst<NoneType>
    Return v16
  }
}
--- Expected 3.12 ---
fun jittestmodule:test {
  bb 0 {
    v11:Object = LoadArg<0; "x">
    v12:Func = LoadCurrentFunc
    Snapshot
    v13:CInt32 = LoadEvalBreaker
    CondBranch<4, 3> v13
  }

  bb 4 (preds 0) {
    Snapshot
    v14:CInt32 = RunPeriodicTasks {
      FrameState {
        CurInstrOffset 0
        Locals<1> v11
      }
    }
    Branch<3>
  }

  bb 3 (preds 0, 4) {
    Snapshot
    v16:Nullptr = LoadConst<Nullptr>
    v17:OptObject = LoadGlobalCached<0; "isinstance">
    v18:MortalObjectUser[builtin_function_or_method:isinstance:0xdeadbeef] = GuardIs<0xdeadbeef> v17 {
      Descr 'LOAD_GLOBAL: isinstance'
    }
    Snapshot
    v19:OptObject = LoadGlobalCached<1; "str">
    v20:ImmortalTypeExact[str:obj] = GuardIs<0xdeadbeef> v19 {
      Descr 'LOAD_GLOBAL: str'
    }
    Snapshot
    v28:Type = LoadField<ob_type@8, Type, borrowed> v11
    v29:CBool = PrimitiveCompare<Equal> v28 v20
    CondBranch<5, 6> v29
  }

  bb 5 (preds 3) {
    v30:Bool = PrimitiveBoxBool v29
    Branch<7>
  }

  bb 6 (preds 3) {
    v31:CInt32 = IsInstance v11 v20 {
      FrameState {
        CurInstrOffset 24
        Locals<1> v11
      }
    }
    v32:CInt32[1] = LoadConst<CInt32[1]>
    v33:CBool = PrimitiveCompare<Equal> v31 v32
    v34:Bool = PrimitiveBoxBool v33
    Branch<7>
  }

  bb 7 (preds 5, 6) {
    v35:Bool = Phi<5, 6> v30 v34
    Snapshot
    UseType<Bool> v35
    v36:ImmortalBool[True] = LoadConst<ImmortalBool[True]>
    v37:CBool = PrimitiveCompare<Equal> v35 v36
    v38:CInt32 = IntConvert<CInt32> v37
    CondBranch<1, 2> v37
  }

  bb 1 (preds 7) {
    Snapshot
    v23:ImmortalLongExact[1] = LoadConst<ImmortalLongExact[1]>
    Return<ImmortalLongExact[1]> v23
  }

  bb 2 (preds 7) {
    Snapshot
    v25:NoneType = LoadConst<NoneType>
    Return<NoneType> v25
  }
}
--- End ---
