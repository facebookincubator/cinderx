--- Test Suite Name ---
SuperAccessTest
--- Passes ---
--- Test Name ---
SuperStoreAttrNotOptimized
--- Input ---
class A:
    def f(self):
      super().x = 1
test = A.f
--- Expected 3.10 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadConst<ImmortalLongExact[1]>
    v5 = LoadGlobalCached<0; "super">
    v5 = GuardIs<0xdeadbeef> v5 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v6 = VectorCall<0> v5 {
      FrameState {
        CurInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    StoreAttr<1; "x"> v6 v4 {
      FrameState {
        CurInstrOffset 6
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v7 = LoadConst<NoneType>
    Return v7
  }
}
--- Expected 3.12 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    Snapshot
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadEvalBreaker
    CondBranch<2, 1> v4
  }

  bb 2 (preds 0) {
    Snapshot
    v5 = RunPeriodicTasks {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    Snapshot
    v6 = LoadConst<ImmortalLongExact[1]>
    v8 = LoadConst<Nullptr>
    v7 = LoadGlobalCached<0; "super">
    v7 = GuardIs<0xdeadbeef> v7 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v9 = CallMethod<2> v8 v7 {
      FrameState {
        CurInstrOffset 16
        Locals<1> v0
        Cells<1> v1
        Stack<1> v6
      }
    }
    Snapshot
    StoreAttr<1; "x"> v9 v6 {
      FrameState {
        CurInstrOffset 24
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v10 = LoadConst<NoneType>
    v10 = RefineType<NoneType> v10
    Return<NoneType> v10
  }
}
--- Test Name ---
SuperLoadAttr
--- Input ---
class A:
    def f(self):
      return super().f
test = A.f
--- Expected 3.10 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        CurInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v5 = RefineType<Type> v5
    v6 = LoadAttrSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        CurInstrOffset 6
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    Return v6
  }
}
--- Expected 3.12 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    Snapshot
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadEvalBreaker
    CondBranch<2, 1> v4
  }

  bb 2 (preds 0) {
    Snapshot
    v5 = RunPeriodicTasks {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    Snapshot
    v6 = LoadGlobalCached<0; "super">
    v6 = GuardIs<0xdeadbeef> v6 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v7 = LoadCellItem v1
    v7 = CheckVar<"__class__"> v7 {
      FrameState {
        CurInstrOffset 14
        Locals<1> v0
        Cells<1> v1
        Stack<1> v6
      }
    }
    Snapshot
    v7 = RefineType<Type> v7
    v8 = LoadAttrSuper<1; "f", false> v6 v7 v0 {
      FrameState {
        CurInstrOffset 18
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    Return v8
  }
}
--- Test Name ---
MethodCallWithSuperLoadAttr
--- Input ---
class A:
    def f(self):
      super().f(a=1)
test = A.f
--- Expected 3.10 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        CurInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v5 = RefineType<Type> v5
    v6 = LoadAttrSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        CurInstrOffset 6
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v7 = LoadConst<ImmortalLongExact[1]>
    v8 = LoadConst<MortalTupleExact[tuple:0xdeadbeef]>
    v9 = VectorCall<2, kwnames> v6 v7 v8 {
      FrameState {
        CurInstrOffset 12
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v10 = LoadConst<NoneType>
    Return v10
  }
}
--- Expected 3.12 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    Snapshot
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadEvalBreaker
    CondBranch<2, 1> v4
  }

  bb 2 (preds 0) {
    Snapshot
    v5 = RunPeriodicTasks {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    Snapshot
    v6 = LoadGlobalCached<0; "super">
    v6 = GuardIs<0xdeadbeef> v6 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v7 = LoadCellItem v1
    v7 = CheckVar<"__class__"> v7 {
      FrameState {
        CurInstrOffset 14
        Locals<1> v0
        Cells<1> v1
        Stack<1> v6
      }
    }
    Snapshot
    v7 = RefineType<Type> v7
    v8 = LoadMethodSuper<1; "f", false> v6 v7 v0 {
      FrameState {
        CurInstrOffset 18
        Locals<1> v0
        Cells<1> v1
      }
    }
    v9 = GetSecondOutput<OptObject> v8
    Snapshot
    v10 = LoadConst<ImmortalLongExact[1]>
    v11 = LoadConst<MortalTupleExact[tuple:0xdeadbeef]>
    v12 = CallMethod<4> v8 v9 v10 v11 {
      FrameState {
        CurInstrOffset 26
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v13 = LoadConst<NoneType>
    v13 = RefineType<NoneType> v13
    Return<NoneType> v13
  }
}
--- Test Name ---
MethodCallWithSuper
--- Input ---
class A:
    def f(self):
      super().f()
test = A.f
--- Expected 3.10 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        CurInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v5 = RefineType<Type> v5
    v6 = LoadMethodSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        CurInstrOffset 6
        Locals<1> v0
        Cells<1> v1
      }
    }
    v7 = GetSecondOutput<OptObject> v6
    Snapshot
    v8 = CallMethod<2> v6 v7 {
      FrameState {
        CurInstrOffset 8
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v9 = LoadConst<NoneType>
    Return v9
  }
}
--- Expected 3.12 ---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self">
    v2 = LoadCurrentFunc
    Snapshot
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadEvalBreaker
    CondBranch<2, 1> v4
  }

  bb 2 (preds 0) {
    Snapshot
    v5 = RunPeriodicTasks {
      FrameState {
        CurInstrOffset 2
        Locals<1> v0
        Cells<1> v1
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    Snapshot
    v6 = LoadGlobalCached<0; "super">
    v6 = GuardIs<0xdeadbeef> v6 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v7 = LoadCellItem v1
    v7 = CheckVar<"__class__"> v7 {
      FrameState {
        CurInstrOffset 14
        Locals<1> v0
        Cells<1> v1
        Stack<1> v6
      }
    }
    Snapshot
    v7 = RefineType<Type> v7
    v8 = LoadMethodSuper<1; "f", false> v6 v7 v0 {
      FrameState {
        CurInstrOffset 18
        Locals<1> v0
        Cells<1> v1
      }
    }
    v9 = GetSecondOutput<OptObject> v8
    Snapshot
    v10 = CallMethod<2> v8 v9 {
      FrameState {
        CurInstrOffset 22
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v11 = LoadConst<NoneType>
    v11 = RefineType<NoneType> v11
    Return<NoneType> v11
  }
}
--- End ---
