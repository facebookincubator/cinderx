--- Test Suite Name ---
AllPassesStaticTest
--- Passes ---
@AllPasses
--- Test Name ---
LoopDoesNotBoxIndex
--- Input ---
def test(*x):
  for i in x:
   print(i)
--- Expected 3.10 ---
fun jittestmodule:test {
  bb 0 {
    v15:TupleExact = LoadArg<0; "x", TupleExact>
    v16:Nullptr = LoadConst<Nullptr>
    v18:CInt64[0] = LoadConst<CInt64[0]>
    Branch<4>
  }

  bb 4 (preds 0, 2) {
    v24:CInt64 = Phi<0, 2> v18 v37
    v25:OptObject = Phi<0, 2> v16 v48
    v21:CInt32 = LoadEvalBreaker
    CondBranch<5, 1> v21
  }

  bb 5 (preds 4) {
    v26:CInt32 = RunPeriodicTasks {
      LiveValues<3> b:v15 s:v24 o:v25
      FrameState {
        CurInstrOffset 6
        Locals<3> v15 v24 v25
        Stack<1> v15
      }
    }
    Branch<1>
  }

  bb 1 (preds 4, 5) {
    v31:CInt64 = LoadField<ob_size@16, CInt64, borrowed> v15
    v32:CBool = PrimitiveCompare<GreaterThan> v31 v24
    CondBranch<2, 3> v32
  }

  bb 2 (preds 1) {
    v46:CInt64 = IsNegativeAndErrOccurred v24 {
      LiveValues<3> b:v15 s:v24 o:v25
      FrameState {
        CurInstrOffset 22
        Locals<3> v15 v24 v25
        Stack<1> v15
      }
    }
    v47:CInt64 = CheckSequenceBounds v15 v24 {
      LiveValues<3> b:v15 s:v24 o:v25
      FrameState {
        CurInstrOffset 22
        Locals<3> v15 v24 v25
        Stack<1> v15
      }
    }
    v48:Object = LoadArrayItem<Offset[24]> v15 v47 v15
    v36:CInt64[1] = LoadConst<CInt64[1]>
    v37:CInt64 = IntBinaryOp<Add> v24 v36
    v40:OptObject = LoadGlobalCached<0; "print">
    v41:MortalObjectUser[builtin_function_or_method:print:0xdeadbeef] = GuardIs<0xdeadbeef> v40 {
      Descr 'LOAD_GLOBAL: print'
      LiveValues<6> b:v15 s:v24 o:v25 s:v37 b:v40 b:v48
      FrameState {
        CurInstrOffset 30
        Locals<3> v15 v24 v25
        Stack<3> v15 v48 v37
      }
    }
    Incref v48
    XDecref v25
    v43:Object = VectorCall<1> v41 v48 {
      LiveValues<4> b:v15 s:v37 b:v41 o:v48
      FrameState {
        CurInstrOffset 38
        Locals<3> v15 v37 v48
        Stack<1> v15
      }
    }
    Decref v43
    Branch<4>
  }

  bb 3 (preds 1) {
    XDecref v25
    v44:NoneType = LoadConst<NoneType>
    Incref v44
    Return v44
  }
}
--- Expected 3.12 ---
fun jittestmodule:test {
  bb 0 {
    v19:TupleExact = LoadArg<0; "x", TupleExact>
    v21:Nullptr = LoadConst<Nullptr>
    v22:CInt32 = LoadEvalBreaker
    CondBranch<5, 4> v22
  }

  bb 5 (preds 0) {
    UpdatePrevInstr<idx:0 line_no:0>
    v23:CInt32 = RunPeriodicTasks {
      LiveValues<2> b:v19 unc:v21
      FrameState {
        CurInstrOffset 0
        Locals<3> v19 v21 v21
      }
    }
    Branch<4>
  }

  bb 4 (preds 0, 5) {
    v27:CInt64[0] = LoadConst<CInt64[0]>
    Branch<6>
  }

  bb 6 (preds 2, 4) {
    v33:CInt64 = Phi<2, 4> v46 v27
    v34:OptObject = Phi<2, 4> v58 v21
    v30:CInt32 = LoadEvalBreaker
    CondBranch<7, 1> v30
  }

  bb 7 (preds 6) {
    UpdatePrevInstr<idx:5 line_no:2>
    v35:CInt32 = RunPeriodicTasks {
      LiveValues<3> b:v19 s:v33 o:v34
      FrameState {
        CurInstrOffset 10
        Locals<3> v19 v33 v34
        Stack<1> v19
      }
    }
    Branch<1>
  }

  bb 1 (preds 6, 7) {
    v40:CInt64 = LoadField<ob_size@16, CInt64, borrowed> v19
    v41:CBool = PrimitiveCompare<GreaterThan> v40 v33
    CondBranch<2, 3> v41
  }

  bb 2 (preds 1) {
    v56:CInt64 = IsNegativeAndErrOccurred v33 {
      LiveValues<3> b:v19 s:v33 o:v34
      FrameState {
        CurInstrOffset 26
        Locals<3> v19 v33 v34
        Stack<1> v19
      }
    }
    v57:CInt64 = CheckSequenceBounds v19 v33 {
      LiveValues<3> b:v19 s:v33 o:v34
      FrameState {
        CurInstrOffset 26
        Locals<3> v19 v33 v34
        Stack<1> v19
      }
    }
    v58:Object = LoadArrayItem<Offset[24]> v19 v57 v19
    v45:CInt64[1] = LoadConst<CInt64[1]>
    v46:CInt64 = IntBinaryOp<Add> v33 v45
    v50:OptObject = LoadGlobalCached<0; "print">
    v51:MortalObjectUser[builtin_function_or_method:print:0xdeadbeef] = GuardIs<0xdeadbeef> v50 {
      Descr 'LOAD_GLOBAL: print'
      LiveValues<6> b:v19 s:v33 o:v34 s:v46 b:v50 b:v58
      FrameState {
        CurInstrOffset 36
        Locals<3> v19 v33 v34
        Stack<3> v19 v58 v46
      }
    }
    Incref v58
    UpdatePrevInstr<idx:27 line_no:3>
    XDecref v34
    v59:Object = VectorCall<1> v51 v58 {
      LiveValues<4> b:v19 s:v46 b:v51 o:v58
      FrameState {
        CurInstrOffset 54
        Locals<3> v19 v46 v58
        Stack<1> v19
      }
    }
    Decref v59
    Branch<6>
  }

  bb 3 (preds 1) {
    UpdatePrevInstr<idx:35 line_no:-1>
    XDecref v34
    v53:ImmortalNoneType = LoadConst<ImmortalNoneType>
    Return<ImmortalNoneType> v53
  }
}
--- End ---
