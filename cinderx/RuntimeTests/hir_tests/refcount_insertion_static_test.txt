--- Test Suite Name ---
RefcountInsertionStaticTest
--- Passes ---
RefcountInsertion
--- Test Name ---
IntFieldInitNoRefCount
--- Input ---
from __static__ import int32

class Test:
    def __init__(self) -> None:
        self.x: int32 = 0

test = Test.__init__
--- Expected 3.10 ---
fun jittestmodule:Test.__init__ {
  bb 0 {
    v5:User[Test] = LoadArg<0; "self", User[Test]>
    v6:CInt32[0] = LoadConst<CInt32[0]>
    v8:Nullptr = LoadConst<Nullptr>
    StoreField<x@16> v5 v6 v8
    v10:NoneType = LoadConst<NoneType>
    Incref v10
    Return<NoneType> v10
  }
}
--- Expected 3.12 ---
fun jittestmodule:Test.__init__ {
  bb 0 {
    v8:User[Test] = LoadArg<0; "self", User[Test]>
    v10:CInt32 = LoadEvalBreaker
    CondBranch<2, 1> v10
  }

  bb 2 (preds 0) {
    v11:CInt32 = RunPeriodicTasks {
      LiveValues<1> b:v8
      FrameState {
        CurInstrOffset 0
        Locals<1> v8
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    v13:CInt32[0] = LoadConst<CInt32[0]>
    v14:Nullptr = LoadConst<Nullptr>
    StoreField<x@16> v8 v13 v14
    v16:ImmortalNoneType = LoadConst<ImmortalNoneType>
    Return<ImmortalNoneType> v16
  }
}
--- Test Name ---
StoreFieldIncRef
--- Input ---
class Test:
    def __init__(self) -> None:
        self.x = 0

test = Test.__init__
--- Expected 3.10 ---
fun jittestmodule:Test.__init__ {
  bb 0 {
    v4:User[Test] = LoadArg<0; "self", User[Test]>
    v5:ImmortalLongExact[0] = LoadConst<ImmortalLongExact[0]>
    v7:OptObject = LoadField<x@16, OptObject, owned> v4
    StoreField<x@16> v4 v5 v7
    XDecref v7
    v8:NoneType = LoadConst<NoneType>
    Incref v8
    Return<NoneType> v8
  }
}
--- Expected 3.12 ---
fun jittestmodule:Test.__init__ {
  bb 0 {
    v7:User[Test] = LoadArg<0; "self", User[Test]>
    v9:CInt32 = LoadEvalBreaker
    CondBranch<2, 1> v9
  }

  bb 2 (preds 0) {
    v10:CInt32 = RunPeriodicTasks {
      LiveValues<1> b:v7
      FrameState {
        CurInstrOffset 0
        Locals<1> v7
      }
    }
    Branch<1>
  }

  bb 1 (preds 0, 2) {
    v12:ImmortalLongExact[0] = LoadConst<ImmortalLongExact[0]>
    v13:OptObject = LoadField<x@16, OptObject, owned> v7
    StoreField<x@16> v7 v12 v13
    XDecref v13
    v14:ImmortalNoneType = LoadConst<ImmortalNoneType>
    Return<ImmortalNoneType> v14
  }
}
--- End ---
